shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?renderDataTable
runApp()
?seed
??seed
?set.seed
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
?subset
?boxplot
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?ggplot
?aes
?coord_cartesian
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?paste
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?geom_histogram
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?hist
?histogram
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?apply
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?geom_smooth
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
sonar
Sonar
runApp()
library(mlbench)
data(Sonar)
Sonar
unique(Sonar$Class)
library(C50)
churn
data(churn)
churnTest
runApp()
runApp()
runApp()
runApp()
runApp()
?kable
unlink('D:/poli/II_stopnia/sem_III/ED/projektSledzie/SledzieProjekt_20012_1_cache', recursive = TRUE)
?nrow
install.packages("corrplot")
?is.numeric
install.packages(matrixStats)
install.packages("matrixStats")
unlink('D:/poli/II_stopnia/sem_III/ED/projektSledzie/SledzieProjekt_20012_1_cache', recursive = TRUE)
?mod
?mode
unlink('D:/poli/II_stopnia/sem_III/ED/projektSledzie/SledzieProjekt_20012_1_cache', recursive = TRUE)
?chart.Correlation
??chart.Correlation
unlink('D:/poli/II_stopnia/sem_III/ED/projektSledzie/SledzieProjekt_20012_1_cache', recursive = TRUE)
unlink('D:/poli/II_stopnia/sem_III/ED/projektSledzie/SledzieProjekt_20012_1_cache', recursive = TRUE)
library(dplyr)
library(ggplot2)
library(tabplot)
library(caret)
library(datasets)
library(data.table)
library(matrixStats)
library(PerformanceAnalytics)
library(corrplot)
library(plotly)
dep_ver <-packageVersion("dplyr")
packages<-(.packages())
knitr::opts_chunk$set(echo = FALSE)
#Kod zapewniający powtarzalność wyników przy każdym uruchomieniu raportu na tych samych danych.
set.seed(127)
#Kod pozwalający wczytać dane z pliku.
mydata <- read.csv("sledzie.csv")
class(mydata)
# find elements
idx <- mydata == "?"
# replace elements with NA
is.na(mydata) <- idx
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
oldColNames<-colnames(mydata)
colnames(mydata)<-c("nr","dl","gpl1g1","gpl1g2","gpl2g1","gpl2g2","gwidlg1","gwidlg2","poz_nar","roczny_nar","lpoz_nar","llzlowryb","tempC", "zasol", "mies", "oscyl")
opisParam<-c(
"numer pomiaru",
"długość złowionego śledzia [cm]",
"dostępność planktonu [zagęszczenie Calanus finmarchicus gat. 1]",
"dostępność planktonu [zagęszczenie Calanus finmarchicus gat. 2]",
"dostępność planktonu [zagęszczenie Calanus helgolandicus gat. 1]",
"dostępność planktonu [zagęszczenie Calanus helgolandicus gat. 2]",
"dostępność planktonu [zagęszczenie widłonogów gat. 1]",
"dostępność planktonu [zagęszczenie widłonogów gat. 2]",
"natężenie połowów w regionie [ułamek pozostawionego narybku]",
"roczny narybek [liczba śledzi]",
"roczne roczne natężenie połowów w regionie [ułamek pozostawionego narybku]",
"roczna liczba ryb złowionych w ramach połowu [liczba śledzi]",
"temperatura przy powierzchni wody [stopnie Celsjusza]",
"poziom zasolenia wody [Knudsen ppt]",
"miesiąc połowu [numer miesiąca]",
"oscylacja północnoatlantycka [mb]")
classes<-sapply(mydata,class)
modaForAll<-sapply(mydata,Mode)
typyKolumn<-sapply(classes,unique)
newColNamesDf<-colnames(mydata)
dfColNames<-data.frame("Pierwotne nazwy kolumn"=oldColNames, "Nowe nazwy kolumn"=newColNamesDf,"Typy kolumn"= typyKolumn, "Opis kolumn" = opisParam, "Moda->NA"=modaForAll)
knitr::kable(dfColNames, row.names = FALSE)
swirl()
library(swirl.pl)
swirl()
sdsd
filter()
top_unique<-filter(unique>465)
top_unique<-filter(pack_sum,unique>465)
View()
View(top_unique)
runApp()
install.packages('FSelector')
play()
install.packages('FSelector')
library(FSelector)
?train
?sample
unlink('D:/poli/II_stopnia/sem_III/ED/projektSledzie/SledzieProjekt_20012_1_cache', recursive = TRUE)
?get
unlink('D:/poli/II_stopnia/sem_III/ED/projektSledzie/SledzieProjekt_20012_1_cache', recursive = TRUE)
unlink('checkFunctions_cache', recursive = TRUE)
?sample
unlink('D:/poli/II_stopnia/sem_III/ED/projektSledzie/SledzieProjekt_20012_1_cache', recursive = TRUE)
unlink('D:/poli/II_stopnia/sem_III/ED/projektSledzie/SledzieProjekt_20012_1_cache', recursive = TRUE)
unlink('D:/poli/II_stopnia/sem_III/ED/projektSledzie/SledzieProjekt_20012_1_cache', recursive = TRUE)
?trainControl
c(nameTable1, " ","START INFO")
c("dddddddddddd", " ","START INFO")
c("4444444444444444444444")
knitr::kable("ddddddddddddddddddddd")
?scale
install.packages((max()))
expand.grid(mtry = 10:30)
?tracin
?train
??train
train
library(caret)
train
?train
?trainControl
?na.omit
?rpart
??rpart
library(rpart)
?mtry
shiny::runApp()
runApp()
4+6/7
2/2
unlink('D:/poli/II_stopnia/sem_III/ED/projektSledzie/SledzieProjekt_20012_2_cache', recursive = TRUE)
